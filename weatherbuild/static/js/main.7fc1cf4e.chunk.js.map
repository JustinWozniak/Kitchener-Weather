{"version":3,"sources":["images/sunlogo.jpg","images/rain.jpg","images/snow.jpg","images/sun.jpg","images/thunder.jpg","images/wind.jpg","Header.js","Home.js","WeatherData.js","FiveDay.js","WeatherApi.js","WeatherCall.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","src","sunlogo","className","alt","Home","WeatherData","props","console","log","weather","day","img","temperature","type","FiveDay","src_WeatherData","rain","snow","sun","thunder","wind","WeatherApi","this","city","name","main","temp","temp_min","temp_max","visibility","humidity","pressure","React","Component","WeatherCall","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","fetch","then","response","json","data","JSON","stringify","setState","src_WeatherApi","Navbar","button_one","button_two","button_three","handleClick","bind","assertThisInitialized","target","id","onClick","src_Home","src_FiveDay","src_WeatherCall","App","src_Header","NavBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fc1cf4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunlogo.b386d54e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.4015273f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.7e6b0eea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sun.4daf05f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.bb256717.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wind.89aa4886.jpg\";","import React from \"react\";\r\nimport \"./App.css\";\r\nimport sunlogo from \"./images/sunlogo.jpg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <img src={sunlogo} className=\"App-logo\" alt=\"logo\" />\r\n      <div className=\"weatherword\">Justins Weather App </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"homediv\">\r\n      Welcome to my weather app! Click the 5-day Hardcoded to see weather\r\n      displayed from a hardcoded file or click Api to see it displayed from the Weather Api.\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\n\r\nfunction WeatherData(props) {\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <div className='day'>{props.weather.day}</div>\r\n            <img className=\"img\"src={props.weather.img} alt=\"weathericon\"/>\r\n            <div className='temperature'>Temperature: {props.weather.temperature}</div>\r\n            <div className='temperature'>Type: {props.weather.type}</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default WeatherData","import React from \"react\";\r\nimport WeatherData from \"./WeatherData.js\";\r\nimport rain from \"./images/rain.jpg\";\r\nimport snow from \"./images/snow.jpg\";\r\nimport sun from \"./images/sun.jpg\";\r\nimport thunder from \"./images/thunder.jpg\";\r\nimport wind from \"./images/wind.jpg\";\r\n\r\nfunction FiveDay(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"fivedays\">5-Day Hardcoded</div>\r\n      <div className=\"fivedaydiv\">\r\n        <WeatherData\r\n          weather={{\r\n            day: \"Monday\",\r\n            img: rain,\r\n            temperature: \"+10\",\r\n            type: \"Rainy\"\r\n          }}\r\n        />\r\n\r\n        <WeatherData\r\n          weather={{\r\n            day: \"Tuesday\",\r\n            img: snow,\r\n            temperature: \"-75\",\r\n            type: \"Snow\"\r\n          }}\r\n        />\r\n\r\n        <WeatherData\r\n          weather={{\r\n            day: \"Wednesday\",\r\n            img: sun,\r\n            temperature: \"+75\",\r\n            type: \"Super Hot\"\r\n          }}\r\n        />\r\n\r\n        <WeatherData\r\n          weather={{\r\n            day: \"Thursday\",\r\n            img: thunder,\r\n            temperature: \"0\",\r\n            type: \"Thunderstorms\"\r\n          }}\r\n        />\r\n        <WeatherData\r\n          weather={{\r\n            day: \"Friday\",\r\n            img: wind,\r\n            temperature: \"+5\",\r\n            type: \"Tornados\"\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FiveDay;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\n\r\nclass WeatherApi extends React.Component {\r\n  render(props) {\r\n    return (\r\n      <div>\r\n        <h1 className='api'>City:{this.props.city.name}</h1>\r\n        <h1 className='api'>Current Temperature:{this.props.city.main.temp}</h1>\r\n        <h1 className='api'>Min Today:{this.props.city.main.temp_min} degrees</h1>\r\n        <h1 className='api'>Max Today:{this.props.city.main.temp_max} degrees</h1>\r\n        <h1 className='api'>Visibility:{this.props.city.visibility}</h1>\r\n        <h1 className='api'>Humidity:{this.props.city.main.humidity}</h1>\r\n        <h1 className='api'>Pressure:{this.props.city.main.pressure}</h1>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherApi;","import React from \"react\";\r\nimport WeatherApi from \"./WeatherApi\";\r\n\r\n\r\n\r\nclass WeatherCall extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      weather: {main: {}}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/weather?q=kitchener,Canada&appid=c36ca171c0c0e284d76234b2ac470614&units=metric\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let objectString = JSON.stringify(data);\r\n\r\n        this.setState({\r\n          weather: data,\r\n        });\r\n      });\r\n    \r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.weather)\r\n    return (\r\n      <div>\r\n        <WeatherApi city={this.state.weather} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCall;\r\n","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport FiveDay from \"./FiveDay\";\r\nimport WeatherCall from \"./WeatherCall\";\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      button_one: false,\r\n      button_two: false,\r\n      button_three: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(props) {\r\n    //     Setting state and a callback function\r\n    if (props.target.id === \"button_one\") {\r\n      this.setState({ button_one: true });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: false });\r\n    }\r\n    if (props.target.id === \"button_two\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: true });\r\n      this.setState({ button_three: false });\r\n    }\r\n    if (props.target.id === \"button_three\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: true });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar\">\r\n          <div id=\"react-application\">\r\n            <button\r\n              id=\"button_one\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Home\r\n            </button>\r\n            <button\r\n              id=\"button_two\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              5-Day Fake\r\n            </button>\r\n            <button\r\n              id=\"button_three\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Api\r\n            </button>\r\n            <div className=\"spacer\" />\r\n          </div>\r\n          <div className=\"conditional-render-section\">\r\n            {this.state.button_one ? (\r\n              <div id=\"div-one\">\r\n                <div className=\"img-wrapper\">\r\n                  <Home />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n            {this.state.button_two ? (\r\n              <div id=\"div-two\">\r\n                <div className=\"img-wrapper\">\r\n                  <FiveDay />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n          {this.state.button_three ? (\r\n            <div id=\"div-two\">\r\n              <div className=\"img-wrapper\">\r\n                <WeatherCall />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n          <main className=\"body\" />\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport NavBar from './NavBar'\n\nclass App extends Component {\n  render() {\n    \n    return (\n      <div>\n        <Header />\n        <NavBar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}